{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNnc1HJaYzfheFe/mwknq0J"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"wTGYjAhwSIJi"},"outputs":[],"source":["import numpy as np"]},{"cell_type":"code","source":["data1 = [3.5, 5, 4, 6, 76,54,54,4,6] # list\n","arr1 = np.array(data1) # array1"],"metadata":{"id":"s_--ribXSoAf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1qXMuxAuS_q7","executionInfo":{"status":"ok","timestamp":1707053174128,"user_tz":-300,"elapsed":4,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"2d828ee2-2902-411d-c8a0-e5ba035b9bc4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[3.5, 5, 4, 6, 76, 54, 54, 4, 6]"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["arr1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P8To5UhFTEfP","executionInfo":{"status":"ok","timestamp":1707053188861,"user_tz":-300,"elapsed":3,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"5788ad55-c8ab-44cd-bd73-97f5e235f0cf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 3.5,  5. ,  4. ,  6. , 76. , 54. , 54. ,  4. ,  6. ])"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["data2 = tuple(range(16))\n","arr2 = np.array(data2)\n","print(f\"Data:{data2}\")\n","print(f\"Array{arr2}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4a1pPcF4TH5k","executionInfo":{"status":"ok","timestamp":1707057960035,"user_tz":-300,"elapsed":566,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"4818c6ba-29a5-4517-82a1-30735701facb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Data:(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)\n","Array[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]\n"]}]},{"cell_type":"code","source":["arr1.ndim"],"metadata":{"id":"gZi-WvKPlVBa","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1707058647659,"user_tz":-300,"elapsed":435,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"9bf58599-3504-495f-d548-fb86c1bf1bb1"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["data3 = ([4,3,5,6,4,3], [3,4,4,5,5,4,3,3,4])\n","arr3 = np.array(data3)\n","print(f\"Data:{data3}\")\n","print(f\"Array{arr3}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YBaf2bPpn8wt","executionInfo":{"status":"ok","timestamp":1707058789792,"user_tz":-300,"elapsed":8,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"f33c3251-740d-4075-eb0f-044392e740a5"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Data:([4, 3, 5, 6, 4, 3], [3, 4, 4, 5, 5, 4, 3, 3, 4])\n","Array[list([4, 3, 5, 6, 4, 3]) list([3, 4, 4, 5, 5, 4, 3, 3, 4])]\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-8-086428bad9f8>:2: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.\n","  arr3 = np.array(data3)\n"]}]},{"cell_type":"code","source":["arr3.ndim"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H5xzJ6OZofgU","executionInfo":{"status":"ok","timestamp":1707058810790,"user_tz":-300,"elapsed":12,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"0c767dca-9f02-42bd-c02c-26c24c7d6fc3"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["data4 = [[1,2,3,4,5,6,7], [8,9,10,11,12,13,14,15]] # Nested list\n","arr4 = np.array(data4)\n","print(f\"Data:{data4}\")\n","print(f\"Array:{arr4}\")\n","print(f\"Ndim:{arr4.ndim}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y7PPf6EZokua","executionInfo":{"status":"ok","timestamp":1707059300470,"user_tz":-300,"elapsed":342,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"02814e07-d258-4f7d-df0a-4acc81fbc68c"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Data:[[1, 2, 3, 4, 5, 6, 7], [8, 9, 10, 11, 12, 13, 14, 15]]\n","Array:[list([1, 2, 3, 4, 5, 6, 7]) list([8, 9, 10, 11, 12, 13, 14, 15])]\n","Ndim:1\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-11-96823dfcc6a6>:2: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.\n","  arr4 = np.array(data4)\n"]}]},{"cell_type":"code","source":["data5 = [[1,2,3,4,5,6,7], [8,9,10,11,12,13,14,15]] # Nested list\n","arr5 = np.array(data5)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A9reVup8o9Eh","executionInfo":{"status":"ok","timestamp":1707059338711,"user_tz":-300,"elapsed":336,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"3e9d7b57-a034-4a4e-de3e-b7e83bdbe652"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-12-8bb9c68b60be>:2: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.\n","  arr5 = np.array(data5)\n"]}]},{"cell_type":"code","source":["arr5\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Izg9pge9qlmP","executionInfo":{"status":"ok","timestamp":1707059403793,"user_tz":-300,"elapsed":314,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"5772ccc7-fc51-4114-84ff-685a383c5260"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([list([1, 2, 3, 4, 5, 6, 7]), list([8, 9, 10, 11, 12, 13, 14, 15])],\n","      dtype=object)"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["arr5.ndim"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IOJaktyCq1fZ","executionInfo":{"status":"ok","timestamp":1707059422598,"user_tz":-300,"elapsed":340,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"a390ce21-1d13-4547-b5ba-84f8b4aa36d7"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["data6 = [[1,2,3,4,5,6,7], [8,9,10,11,12,13,14,15]] # Nested list\n","arr6 = np.array(data6)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":192},"id":"60mdtjMoq6Gu","executionInfo":{"status":"error","timestamp":1707059571948,"user_tz":-300,"elapsed":12,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"e0e10bea-0d9d-4b0c-ba76-452b3c0f5f7a"},"execution_count":20,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-20-4cd0047abbe5>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mdata6\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m7\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m8\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m9\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m11\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m12\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m13\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m14\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m15\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;31m# Nested list\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0marr6\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata6\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mint32\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mValueError\u001b[0m: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part."]}]},{"cell_type":"code","source":["arr6.ndim\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DJ8Msk4WrIGQ","executionInfo":{"status":"ok","timestamp":1707059522263,"user_tz":-300,"elapsed":306,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"b21fa62d-b42f-490b-e918-7a3e5b197384"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["arr7 = np.array([[[1,2,3,4,5,6,7] [[1,2,3,4,5,6,7], [[1,2,3,4,5,6,7], [8,9,10,11,12,13,14,15], [[1,2,3,4,5,6,7], [[1,2,3,4,5,6,7], [8,9,10,11,12,13,14,15]]]]]]])\n","arr7.ndim"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":262},"id":"A4k46AtyrJo6","executionInfo":{"status":"error","timestamp":1707060125906,"user_tz":-300,"elapsed":309,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"ff43e658-b831-4fa0-eb31-a92ed6c5c0d0"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stderr","text":["<>:1: SyntaxWarning: list indices must be integers or slices, not tuple; perhaps you missed a comma?\n","<>:1: SyntaxWarning: list indices must be integers or slices, not tuple; perhaps you missed a comma?\n","<ipython-input-40-a1e12080573c>:1: SyntaxWarning: list indices must be integers or slices, not tuple; perhaps you missed a comma?\n","  arr7 = np.array([[[1,2,3,4,5,6,7] [[1,2,3,4,5,6,7], [[1,2,3,4,5,6,7], [8,9,10,11,12,13,14,15], [[1,2,3,4,5,6,7], [[1,2,3,4,5,6,7], [8,9,10,11,12,13,14,15]]]]]]])\n"]},{"output_type":"error","ename":"TypeError","evalue":"list indices must be integers or slices, not tuple","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-40-a1e12080573c>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0marr7\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m7\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m7\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m7\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m8\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m9\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m11\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m12\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m13\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m14\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m15\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m7\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m7\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m8\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m9\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m11\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m12\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m13\u001b[0m\u001b[0;34...\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0marr7\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndim\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: list indices must be integers or slices, not tuple"]}]},{"cell_type":"code","source":["arr7"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8-jDe1M-r3I3","executionInfo":{"status":"ok","timestamp":1707060026764,"user_tz":-300,"elapsed":8,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"ba37492a-95a0-4aa5-9fdd-ab98f6c988b4"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([list([1, 2, 3, 4, 5, 6, 7]), list([8, 9, 10, 11, 12, 13, 14, 15]),\n","       list([[1, 2, 3, 4, 5, 6, 7], [[1, 2, 3, 4, 5, 6, 7], [8, 9, 10, 11, 12, 13, 14, 15], [[1, 2, 3, 4, 5, 6, 7], [[1, 2, 3, 4, 5, 6, 7], [8, 9, 10, 11, 12, 13, 14, 15]]]]])],\n","      dtype=object)"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["arr7.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vYjZm4hjtNgR","executionInfo":{"status":"ok","timestamp":1707060141553,"user_tz":-300,"elapsed":9,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"50ff29bf-f573-4fb5-a4bf-85029ca8c599"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3,)"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["arr7 = np.ones(shape=(4,7))"],"metadata":{"id":"w_GLzLoEtSfG","executionInfo":{"status":"ok","timestamp":1707060320632,"user_tz":-300,"elapsed":339,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["arr7"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z3spSga5uVUs","executionInfo":{"status":"ok","timestamp":1707060324424,"user_tz":-300,"elapsed":425,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"0a88511f-7d97-43d8-e015-dd4092952449"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 1., 1., 1., 1., 1., 1.],\n","       [1., 1., 1., 1., 1., 1., 1.],\n","       [1., 1., 1., 1., 1., 1., 1.],\n","       [1., 1., 1., 1., 1., 1., 1.]])"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["arr7.shape\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n6ylkgdIuWJa","executionInfo":{"status":"ok","timestamp":1707060338107,"user_tz":-300,"elapsed":435,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"f94c369d-50d1-4608-efb1-71ebecf9e467"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(4, 7)"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["arr7.ndim"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L2z9vcS7uZjS","executionInfo":{"status":"ok","timestamp":1707060360878,"user_tz":-300,"elapsed":418,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"ca000cc4-ca74-40a6-f3dd-c1ced5f68606"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["data8 = [\n","    [\n","        [[\n","        [5,6,7],\n","        [6,7,8],\n","        [6,7,8],\n","    ],],\n","        [[\n","        [5,6,7],\n","        [6,7,8],\n","        [6,7,8],\n","    ],],\n","        [[\n","        [5,6,7],\n","        [6,7,8],\n","        [6,7,8],\n","    ],],\n","    ],\n","    [\n","        [[\n","        [5,6,7],\n","        [6,7,8],\n","        [6,7,8],\n","    ],],\n","        [[\n","        [5,6,7],\n","        [6,7,8],\n","        [6,7,8],\n","    ],],\n","        [[\n","        [5,6,7],\n","        [6,7,8],\n","        [6,7,8],\n","    ],],\n","    ],\n","    [\n","        [[\n","        [5,6,7],\n","        [6,7,8],\n","        [6,7,8],\n","    ],],\n","        [[\n","        [5,6,7],\n","        [6,7,8],\n","        [6,7,8],\n","    ],],\n","        [[\n","        [5,6,7],\n","        [6,7,8],\n","        [6,7,8],\n","    ],],\n","    ],\n","]\n","arr8 = np.array(data8, dtype=object)\n","arr8.shape\n","arr8.ndim"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HWX0BVu0ufBe","executionInfo":{"status":"ok","timestamp":1707060800697,"user_tz":-300,"elapsed":5,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"2f882af0-4c28-43a0-8e8c-5c4c727e79d9"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["arr9 = np.arange(21)\n","arr9"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LF_V6bHPu24H","executionInfo":{"status":"ok","timestamp":1707060565663,"user_tz":-300,"elapsed":7,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"32044290-b316-4d7d-e52b-b868c93d0862"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n","       17, 18, 19, 20])"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":[],"metadata":{"id":"Vph1ITA0vOWw"},"execution_count":null,"outputs":[]}]}