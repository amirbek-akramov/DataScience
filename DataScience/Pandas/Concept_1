{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMw4ba7g1H/BOxVYNHK/jb2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"SMOIlAd1Fcmk"},"outputs":[],"source":["import pandas as pd\n","from pandas import Series\n","import numpy as np"]},{"cell_type":"code","source":["obj = Series([4, 5, 6, -7.5])"],"metadata":{"id":"gRl-ihf3FiS5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["type(obj)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"p_Hk1yPDH-TD","executionInfo":{"status":"ok","timestamp":1708174345197,"user_tz":-300,"elapsed":474,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"3ce9711d-c5ac-4e5d-c222-1f8651132671"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["pandas.core.series.Series"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>pandas.core.series.Series</b><br/>def __init__(data=None, index=None, dtype: Dtype | None=None, name=None, copy: bool=False, fastpath: bool=False) -&gt; None</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/pandas/core/series.py</a>One-dimensional ndarray with axis labels (including time series).\n","\n","Labels need not be unique but must be a hashable type. The object\n","supports both integer- and label-based indexing and provides a host of\n","methods for performing operations involving the index. Statistical\n","methods from ndarray have been overridden to automatically exclude\n","missing data (currently represented as NaN).\n","\n","Operations between Series (+, -, /, \\*, \\*\\*) align values based on their\n","associated index values-- they need not be the same length. The result\n","index will be the sorted union of the two indexes.\n","\n","Parameters\n","----------\n","data : array-like, Iterable, dict, or scalar value\n","    Contains data stored in Series. If data is a dict, argument order is\n","    maintained.\n","index : array-like or Index (1d)\n","    Values must be hashable and have the same length as `data`.\n","    Non-unique index values are allowed. Will default to\n","    RangeIndex (0, 1, 2, ..., n) if not provided. If data is dict-like\n","    and index is None, then the keys in the data are used as the index. If the\n","    index is not None, the resulting Series is reindexed with the index values.\n","dtype : str, numpy.dtype, or ExtensionDtype, optional\n","    Data type for the output Series. If not specified, this will be\n","    inferred from `data`.\n","    See the :ref:`user guide &lt;basics.dtypes&gt;` for more usages.\n","name : str, optional\n","    The name to give to the Series.\n","copy : bool, default False\n","    Copy input data. Only affects Series or 1d ndarray input. See examples.\n","\n","Notes\n","-----\n","Please reference the :ref:`User Guide &lt;basics.series&gt;` for more information.\n","\n","Examples\n","--------\n","Constructing Series from a dictionary with an Index specified\n","\n","&gt;&gt;&gt; d = {&#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;c&#x27;: 3}\n","&gt;&gt;&gt; ser = pd.Series(data=d, index=[&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;])\n","&gt;&gt;&gt; ser\n","a   1\n","b   2\n","c   3\n","dtype: int64\n","\n","The keys of the dictionary match with the Index values, hence the Index\n","values have no effect.\n","\n","&gt;&gt;&gt; d = {&#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;c&#x27;: 3}\n","&gt;&gt;&gt; ser = pd.Series(data=d, index=[&#x27;x&#x27;, &#x27;y&#x27;, &#x27;z&#x27;])\n","&gt;&gt;&gt; ser\n","x   NaN\n","y   NaN\n","z   NaN\n","dtype: float64\n","\n","Note that the Index is first build with the keys from the dictionary.\n","After this the Series is reindexed with the given Index values, hence we\n","get all NaN as a result.\n","\n","Constructing Series from a list with `copy=False`.\n","\n","&gt;&gt;&gt; r = [1, 2]\n","&gt;&gt;&gt; ser = pd.Series(r, copy=False)\n","&gt;&gt;&gt; ser.iloc[0] = 999\n","&gt;&gt;&gt; r\n","[1, 2]\n","&gt;&gt;&gt; ser\n","0    999\n","1      2\n","dtype: int64\n","\n","Due to input data type the Series has a `copy` of\n","the original data even though `copy=False`, so\n","the data is unchanged.\n","\n","Constructing Series from a 1d ndarray with `copy=False`.\n","\n","&gt;&gt;&gt; r = np.array([1, 2])\n","&gt;&gt;&gt; ser = pd.Series(r, copy=False)\n","&gt;&gt;&gt; ser.iloc[0] = 999\n","&gt;&gt;&gt; r\n","array([999,   2])\n","&gt;&gt;&gt; ser\n","0    999\n","1      2\n","dtype: int64\n","\n","Due to input data type the Series has a `view` on\n","the original data, so\n","the data is changed as well.</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 216);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["print(obj)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SATfSezoIAJm","executionInfo":{"status":"ok","timestamp":1708174398823,"user_tz":-300,"elapsed":6,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"8ecad8cb-b4ee-49dc-8837-e6e295b984a6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0    4.0\n","1    5.0\n","2    6.0\n","3   -7.5\n","dtype: float64\n"]}]},{"cell_type":"code","source":["obj.values"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WAT7lJnzINMY","executionInfo":{"status":"ok","timestamp":1708174621192,"user_tz":-300,"elapsed":324,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"5c0858ab-206c-48ea-f32a-218dbd3e8321"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 4. ,  5. ,  6. , -7.5])"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["obj.index"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9N3B4hgxJDXd","executionInfo":{"status":"ok","timestamp":1708174625478,"user_tz":-300,"elapsed":5,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"27eece09-1a12-49ee-85b4-1814f1f30acd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RangeIndex(start=0, stop=4, step=1)"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["obj[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hnJldLg6JEja","executionInfo":{"status":"ok","timestamp":1708174720714,"user_tz":-300,"elapsed":321,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"31e35d2e-cf8f-43fb-c87b-d1dce8f5102f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4.0"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["obj2 = Series([6, 3, 2, 1], index=['a', 'b', 'c', 'd'])\n","obj2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_17x5CItJbqu","executionInfo":{"status":"ok","timestamp":1708174822825,"user_tz":-300,"elapsed":317,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"b71488c8-3176-40c8-dac7-e995b042c8f6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["a    6\n","b    3\n","c    2\n","d    1\n","dtype: int64"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["obj2.index"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wIZ8AsnrJ0mU","executionInfo":{"status":"ok","timestamp":1708174831126,"user_tz":-300,"elapsed":9,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"f09e8017-4120-43a7-d727-8dd9a5b38a10"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['a', 'b', 'c', 'd'], dtype='object')"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["obj2['a']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2DCGTM8SJ2uI","executionInfo":{"status":"ok","timestamp":1708174851128,"user_tz":-300,"elapsed":321,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"d9f55601-eece-472d-ca03-280228e5a761"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["obj2[['a', 'b', 'c']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j5ScUpsgJ5fp","executionInfo":{"status":"ok","timestamp":1708174871493,"user_tz":-300,"elapsed":7,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"15431681-b92d-4a90-efeb-0213e44e3a5a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["a    6\n","b    3\n","c    2\n","dtype: int64"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["obj2[obj2>2]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S1vev-U_KAfW","executionInfo":{"status":"ok","timestamp":1708174994764,"user_tz":-300,"elapsed":6,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"13ecfea6-0f30-4fea-ec48-73a8e7853804"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["a    6\n","b    3\n","dtype: int64"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["obj2*2"],"metadata":{"id":"HKB49gfZKezM","executionInfo":{"status":"ok","timestamp":1708175001392,"user_tz":-300,"elapsed":10,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"b11561b8-c005-4794-f018-19ff84032a64","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["a    12\n","b     6\n","c     4\n","d     2\n","dtype: int64"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["obj/2"],"metadata":{"id":"DgIow2rPKgRM","executionInfo":{"status":"ok","timestamp":1708175006241,"user_tz":-300,"elapsed":10,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"ce8a050b-06a3-4055-c374-e745660a4ed1","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    2.00\n","1    2.50\n","2    3.00\n","3   -3.75\n","dtype: float64"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["np.exp(obj2)"],"metadata":{"id":"PW2MrW_bKhY0","executionInfo":{"status":"ok","timestamp":1708178657536,"user_tz":-300,"elapsed":13,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"fa65bc38-9528-45af-d5c9-b103fc9e0284"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["a    403.428793\n","b     20.085537\n","c      7.389056\n","d      2.718282\n","dtype: float64"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["obj2['a']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AN3uYaLJYck7","executionInfo":{"status":"ok","timestamp":1708178680159,"user_tz":-300,"elapsed":7,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"db545970-8a7a-4c76-90ce-f7c96a92f83c"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["cars_prices = {\n","    'Toyota Camry': 25000, 'Honda Accord': 27000,'Ford Mustang': 35000,'Chevrolet Malibu': 28000,\n","    'Nissan Altima': 26000,'BMW 3 Series': 40000,'Audi A4': 38000,'Mercedes-Benz C-Class': 42000, 'Tesla Model 3': 50000, 'Hyundai Sonata': 26000,}"],"metadata":{"id":"upNCAY9JYgvr","executionInfo":{"status":"ok","timestamp":1708178896839,"user_tz":-300,"elapsed":7,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["type(cars_prices)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qNy3Lur2ZXSU","executionInfo":{"status":"ok","timestamp":1708178905906,"user_tz":-300,"elapsed":7,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"2f776e17-3f87-4edf-8fb0-c13ad44adcbe"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dict"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["cars1 = Series(cars_prices)"],"metadata":{"id":"Kjib75EtZZOV","executionInfo":{"status":"ok","timestamp":1708178925264,"user_tz":-300,"elapsed":10,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["cars1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WRlpCncrZeEJ","executionInfo":{"status":"ok","timestamp":1708178927720,"user_tz":-300,"elapsed":9,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"3fb303af-346e-4a54-c0e4-89fc142b6511"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Toyota Camry             25000\n","Honda Accord             27000\n","Ford Mustang             35000\n","Chevrolet Malibu         28000\n","Nissan Altima            26000\n","BMW 3 Series             40000\n","Audi A4                  38000\n","Mercedes-Benz C-Class    42000\n","Tesla Model 3            50000\n","Hyundai Sonata           26000\n","dtype: int64"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["type(cars1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":203},"id":"mY7hmmMnZevV","executionInfo":{"status":"ok","timestamp":1708178938367,"user_tz":-300,"elapsed":9,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"a9e97c64-2294-4926-8a7f-23038616f039"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["pandas.core.series.Series"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>pandas.core.series.Series</b><br/>def __init__(data=None, index=None, dtype: Dtype | None=None, name=None, copy: bool=False, fastpath: bool=False) -&gt; None</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/pandas/core/series.py</a>One-dimensional ndarray with axis labels (including time series).\n","\n","Labels need not be unique but must be a hashable type. The object\n","supports both integer- and label-based indexing and provides a host of\n","methods for performing operations involving the index. Statistical\n","methods from ndarray have been overridden to automatically exclude\n","missing data (currently represented as NaN).\n","\n","Operations between Series (+, -, /, \\*, \\*\\*) align values based on their\n","associated index values-- they need not be the same length. The result\n","index will be the sorted union of the two indexes.\n","\n","Parameters\n","----------\n","data : array-like, Iterable, dict, or scalar value\n","    Contains data stored in Series. If data is a dict, argument order is\n","    maintained.\n","index : array-like or Index (1d)\n","    Values must be hashable and have the same length as `data`.\n","    Non-unique index values are allowed. Will default to\n","    RangeIndex (0, 1, 2, ..., n) if not provided. If data is dict-like\n","    and index is None, then the keys in the data are used as the index. If the\n","    index is not None, the resulting Series is reindexed with the index values.\n","dtype : str, numpy.dtype, or ExtensionDtype, optional\n","    Data type for the output Series. If not specified, this will be\n","    inferred from `data`.\n","    See the :ref:`user guide &lt;basics.dtypes&gt;` for more usages.\n","name : str, optional\n","    The name to give to the Series.\n","copy : bool, default False\n","    Copy input data. Only affects Series or 1d ndarray input. See examples.\n","\n","Notes\n","-----\n","Please reference the :ref:`User Guide &lt;basics.series&gt;` for more information.\n","\n","Examples\n","--------\n","Constructing Series from a dictionary with an Index specified\n","\n","&gt;&gt;&gt; d = {&#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;c&#x27;: 3}\n","&gt;&gt;&gt; ser = pd.Series(data=d, index=[&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;])\n","&gt;&gt;&gt; ser\n","a   1\n","b   2\n","c   3\n","dtype: int64\n","\n","The keys of the dictionary match with the Index values, hence the Index\n","values have no effect.\n","\n","&gt;&gt;&gt; d = {&#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;c&#x27;: 3}\n","&gt;&gt;&gt; ser = pd.Series(data=d, index=[&#x27;x&#x27;, &#x27;y&#x27;, &#x27;z&#x27;])\n","&gt;&gt;&gt; ser\n","x   NaN\n","y   NaN\n","z   NaN\n","dtype: float64\n","\n","Note that the Index is first build with the keys from the dictionary.\n","After this the Series is reindexed with the given Index values, hence we\n","get all NaN as a result.\n","\n","Constructing Series from a list with `copy=False`.\n","\n","&gt;&gt;&gt; r = [1, 2]\n","&gt;&gt;&gt; ser = pd.Series(r, copy=False)\n","&gt;&gt;&gt; ser.iloc[0] = 999\n","&gt;&gt;&gt; r\n","[1, 2]\n","&gt;&gt;&gt; ser\n","0    999\n","1      2\n","dtype: int64\n","\n","Due to input data type the Series has a `copy` of\n","the original data even though `copy=False`, so\n","the data is unchanged.\n","\n","Constructing Series from a 1d ndarray with `copy=False`.\n","\n","&gt;&gt;&gt; r = np.array([1, 2])\n","&gt;&gt;&gt; ser = pd.Series(r, copy=False)\n","&gt;&gt;&gt; ser.iloc[0] = 999\n","&gt;&gt;&gt; r\n","array([999,   2])\n","&gt;&gt;&gt; ser\n","0    999\n","1      2\n","dtype: int64\n","\n","Due to input data type the Series has a `view` on\n","the original data, so\n","the data is changed as well.</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 216);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["car1 = Series({\n","    'Toyota Camry': 25000, 'Honda Accord': 27000,'Ford Mustang': 35000,'Chevrolet Malibu': 28000,\n","    'Nissan Altima': 26000,'BMW 3 Series': 40000,'Audi A4': 38000,'Mercedes-Benz C-Class': 42000, 'Tesla Model 3': 50000, 'Hyundai Sonata': 26000,})"],"metadata":{"id":"NifY0n7HZhVf","executionInfo":{"status":"ok","timestamp":1708179214870,"user_tz":-300,"elapsed":376,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["cars1[\"Chevrolet Malibu\"]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aHQOGvd0ak1S","executionInfo":{"status":"ok","timestamp":1708179228206,"user_tz":-300,"elapsed":8,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"fdadb482-6f84-4086-b7c1-d8f58c4ed202"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["28000"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["\"BMW\" in cars1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rH654iT5aoCw","executionInfo":{"status":"ok","timestamp":1708179399002,"user_tz":-300,"elapsed":4,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"f18903d4-0477-4564-bf68-8de45a75b36e"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["\"Chevrolet Malibu\" in cars1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0o1kVVL0bR2f","executionInfo":{"status":"ok","timestamp":1708179410892,"user_tz":-300,"elapsed":391,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"5e37846f-9ed0-4e1b-df07-cea65f7fa9aa"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["models = ['Audi A4', 'Hyundai Sonata', 'Ford Mustang', 'Nissan Altima', 'Chevrolet Malibu',\n","                'Tesla Model 3', 'BMW 3 Series', 'Honda Accord', 'Toyota Camry', 'Mercedes-Benz C-Class', \"Another_Cars\", \"Another_one\"]"],"metadata":{"id":"U808AMJybUoP","executionInfo":{"status":"ok","timestamp":1708179965192,"user_tz":-300,"elapsed":420,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["cars2 = Series(cars_prices, index=models)"],"metadata":{"id":"MICjN0rFcpfk","executionInfo":{"status":"ok","timestamp":1708179966233,"user_tz":-300,"elapsed":10,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["cars2 # it is NaN on the empyt fields"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J_zQXLSucwIb","executionInfo":{"status":"ok","timestamp":1708179967651,"user_tz":-300,"elapsed":11,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"c7d1a629-b147-4ee9-d17c-f4cdd5a64ecd"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Audi A4                  38000.0\n","Hyundai Sonata           26000.0\n","Ford Mustang             35000.0\n","Nissan Altima            26000.0\n","Chevrolet Malibu         28000.0\n","Tesla Model 3            50000.0\n","BMW 3 Series             40000.0\n","Honda Accord             27000.0\n","Toyota Camry             25000.0\n","Mercedes-Benz C-Class    42000.0\n","Another_Cars                 NaN\n","Another_one                  NaN\n","dtype: float64"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["cars2.isnull()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7ayJKupCcw0h","executionInfo":{"status":"ok","timestamp":1708180922672,"user_tz":-300,"elapsed":5,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"3981f027-f38f-4fdb-cd96-b4e28669f366"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Audi A4                  False\n","Hyundai Sonata           False\n","Ford Mustang             False\n","Nissan Altima            False\n","Chevrolet Malibu         False\n","Tesla Model 3            False\n","BMW 3 Series             False\n","Honda Accord             False\n","Toyota Camry             False\n","Mercedes-Benz C-Class    False\n","Another_Cars              True\n","Another_one               True\n","dtype: bool"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["cars2.notnull()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jBFiXjoYhFlK","executionInfo":{"status":"ok","timestamp":1708180950503,"user_tz":-300,"elapsed":294,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"3ea5bf94-579b-4e0a-a6ab-4737de8d620b"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Audi A4                   True\n","Hyundai Sonata            True\n","Ford Mustang              True\n","Nissan Altima             True\n","Chevrolet Malibu          True\n","Tesla Model 3             True\n","BMW 3 Series              True\n","Honda Accord              True\n","Toyota Camry              True\n","Mercedes-Benz C-Class     True\n","Another_Cars             False\n","Another_one              False\n","dtype: bool"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["cars2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AMg_1G-chMsv","executionInfo":{"status":"ok","timestamp":1708180983962,"user_tz":-300,"elapsed":326,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"111cb2e0-dc6d-492b-c594-c395112558f3"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Audi A4                  38000.0\n","Hyundai Sonata           26000.0\n","Ford Mustang             35000.0\n","Nissan Altima            26000.0\n","Chevrolet Malibu         28000.0\n","Tesla Model 3            50000.0\n","BMW 3 Series             40000.0\n","Honda Accord             27000.0\n","Toyota Camry             25000.0\n","Mercedes-Benz C-Class    42000.0\n","Another_Cars                 NaN\n","Another_one                  NaN\n","dtype: float64"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["cars1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jAwHdTmxhU2Z","executionInfo":{"status":"ok","timestamp":1708180991482,"user_tz":-300,"elapsed":307,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"2289246d-fe9a-4d85-bf35-c58dc8819447"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Toyota Camry             25000\n","Honda Accord             27000\n","Ford Mustang             35000\n","Chevrolet Malibu         28000\n","Nissan Altima            26000\n","BMW 3 Series             40000\n","Audi A4                  38000\n","Mercedes-Benz C-Class    42000\n","Tesla Model 3            50000\n","Hyundai Sonata           26000\n","dtype: int64"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["cars1+cars2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B-OoVhzhhWjo","executionInfo":{"status":"ok","timestamp":1708181007464,"user_tz":-300,"elapsed":433,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"558854f6-ecd4-41ad-f693-01be6a1097ba"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Another_Cars                  NaN\n","Another_one                   NaN\n","Audi A4                   76000.0\n","BMW 3 Series              80000.0\n","Chevrolet Malibu          56000.0\n","Ford Mustang              70000.0\n","Honda Accord              54000.0\n","Hyundai Sonata            52000.0\n","Mercedes-Benz C-Class     84000.0\n","Nissan Altima             52000.0\n","Tesla Model 3            100000.0\n","Toyota Camry              50000.0\n","dtype: float64"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["cars2.index.name = \"Models\"]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":158},"id":"Yx8kps5ehakV","executionInfo":{"status":"error","timestamp":1708181161480,"user_tz":-300,"elapsed":721,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"115b36a6-f7b9-4584-be6a-f2e1b132e988"},"execution_count":52,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"'numpy.ndarray' object has no attribute 'name'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-52-6249db9ae5bb>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mcars2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"Models\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mcars2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"$\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: 'numpy.ndarray' object has no attribute 'name'"]}]},{"cell_type":"code","source":["cars2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tBXrXFDNhzfh","executionInfo":{"status":"ok","timestamp":1708181137861,"user_tz":-300,"elapsed":8,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"01b238a4-6d97-4a2a-c71c-07233f6cdcd8"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Models\n","Audi A4                  38000.0\n","Hyundai Sonata           26000.0\n","Ford Mustang             35000.0\n","Nissan Altima            26000.0\n","Chevrolet Malibu         28000.0\n","Tesla Model 3            50000.0\n","BMW 3 Series             40000.0\n","Honda Accord             27000.0\n","Toyota Camry             25000.0\n","Mercedes-Benz C-Class    42000.0\n","Another_Cars                 NaN\n","Another_one                  NaN\n","dtype: float64"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":[],"metadata":{"id":"UPS5RrmFh0g6"},"execution_count":null,"outputs":[]}]}