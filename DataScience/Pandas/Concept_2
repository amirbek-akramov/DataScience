{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNJXcEC7bHcyBPes3tIOYBZ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"FeC34RS5KuSq","executionInfo":{"status":"ok","timestamp":1708534798243,"user_tz":-300,"elapsed":1038,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"outputs":[],"source":["import pandas as pd\n","from pandas import DataFrame"]},{"cell_type":"code","source":["data = {\n","    \"Year\": [2021, 2020, 2019, 2018, 2017, 2016, 2015, 2010],\n","    \"Population\": [33.9, 33.5, 32.9, 32.5, 31.9, 31.4, 30.9, 28.5],\n","    \"Temp\": [1.54, 1.48, 1.56, 1.62, 1.65, 1.66, 1.64, 1.53]\n","}\n","df = pd.DataFrame(data)"],"metadata":{"id":"Yg4RtB8CLQ18","executionInfo":{"status":"ok","timestamp":1708534798245,"user_tz":-300,"elapsed":10,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"JKF8xt1MMj9m","executionInfo":{"status":"ok","timestamp":1708534798248,"user_tz":-300,"elapsed":12,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"e5e8bcb9-c11a-4c9f-9c74-9cb6c78d0bbf"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Year  Population  Temp\n","0  2021        33.9  1.54\n","1  2020        33.5  1.48\n","2  2019        32.9  1.56\n","3  2018        32.5  1.62\n","4  2017        31.9  1.65\n","5  2016        31.4  1.66\n","6  2015        30.9  1.64\n","7  2010        28.5  1.53"],"text/html":["\n","  <div id=\"df-fb6cd83a-0aba-4659-acc3-3da8c584f9b9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Population</th>\n","      <th>Temp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2021</td>\n","      <td>33.9</td>\n","      <td>1.54</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020</td>\n","      <td>33.5</td>\n","      <td>1.48</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019</td>\n","      <td>32.9</td>\n","      <td>1.56</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2018</td>\n","      <td>32.5</td>\n","      <td>1.62</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2017</td>\n","      <td>31.9</td>\n","      <td>1.65</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2016</td>\n","      <td>31.4</td>\n","      <td>1.66</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2015</td>\n","      <td>30.9</td>\n","      <td>1.64</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2010</td>\n","      <td>28.5</td>\n","      <td>1.53</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fb6cd83a-0aba-4659-acc3-3da8c584f9b9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fb6cd83a-0aba-4659-acc3-3da8c584f9b9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fb6cd83a-0aba-4659-acc3-3da8c584f9b9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d02a6bff-ce86-4686-a93b-978998229e46\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d02a6bff-ce86-4686-a93b-978998229e46')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d02a6bff-ce86-4686-a93b-978998229e46 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 2010,\n        \"max\": 2021,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2020,\n          2016,\n          2021\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7204131563585034,\n        \"min\": 28.5,\n        \"max\": 33.9,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          33.5,\n          31.4,\n          33.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06633249580710797,\n        \"min\": 1.48,\n        \"max\": 1.66,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.48,\n          1.66,\n          1.54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"source":["# @title Year vs Temp\n","\n","from matplotlib import pyplot as plt\n","import seaborn as sns\n","def _plot_series(series, series_name, series_index=0):\n","  from matplotlib import pyplot as plt\n","  import seaborn as sns\n","  palette = list(sns.palettes.mpl_palette('Dark2'))\n","  xs = series['Year']\n","  ys = series['Temp']\n","\n","  plt.plot(xs, ys, label=series_name, color=palette[series_index % len(palette)])\n","\n","fig, ax = plt.subplots(figsize=(10, 5.2), layout='constrained')\n","df_sorted = df.sort_values('Year', ascending=True)\n","_plot_series(df_sorted, '')\n","sns.despine(fig=fig, ax=ax)\n","plt.xlabel('Year')\n","_ = plt.ylabel('Temp')"],"cell_type":"code","execution_count":5,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x520 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"metadata":{"cellView":"form","colab":{"base_uri":"https://localhost:8080/","height":548},"id":"R4P9nf3cbVBd","executionInfo":{"status":"ok","timestamp":1708534801648,"user_tz":-300,"elapsed":3409,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"30fb7ccf-51c4-4510-ea34-c7ff24311a90"}},{"source":["df"],"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"m_2dEYrdOMVE","executionInfo":{"status":"ok","timestamp":1708534801648,"user_tz":-300,"elapsed":48,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"5ba7eb87-11e4-4b9d-f9a3-ad515665dd9d"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Year  Population  Temp\n","0  2021        33.9  1.54\n","1  2020        33.5  1.48\n","2  2019        32.9  1.56\n","3  2018        32.5  1.62\n","4  2017        31.9  1.65\n","5  2016        31.4  1.66\n","6  2015        30.9  1.64\n","7  2010        28.5  1.53"],"text/html":["\n","  <div id=\"df-176bd9fe-549f-4b8f-a102-fdbfa2e85ecd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Population</th>\n","      <th>Temp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2021</td>\n","      <td>33.9</td>\n","      <td>1.54</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020</td>\n","      <td>33.5</td>\n","      <td>1.48</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019</td>\n","      <td>32.9</td>\n","      <td>1.56</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2018</td>\n","      <td>32.5</td>\n","      <td>1.62</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2017</td>\n","      <td>31.9</td>\n","      <td>1.65</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2016</td>\n","      <td>31.4</td>\n","      <td>1.66</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2015</td>\n","      <td>30.9</td>\n","      <td>1.64</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2010</td>\n","      <td>28.5</td>\n","      <td>1.53</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-176bd9fe-549f-4b8f-a102-fdbfa2e85ecd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-176bd9fe-549f-4b8f-a102-fdbfa2e85ecd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-176bd9fe-549f-4b8f-a102-fdbfa2e85ecd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8cd8081e-d7fd-48f4-8c40-e17a3dc04581\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8cd8081e-d7fd-48f4-8c40-e17a3dc04581')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8cd8081e-d7fd-48f4-8c40-e17a3dc04581 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 2010,\n        \"max\": 2021,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2020,\n          2016,\n          2021\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7204131563585034,\n        \"min\": 28.5,\n        \"max\": 33.9,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          33.5,\n          31.4,\n          33.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06633249580710797,\n        \"min\": 1.48,\n        \"max\": 1.66,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.48,\n          1.66,\n          1.54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"6BrgOym5MkgZ","executionInfo":{"status":"ok","timestamp":1708534801649,"user_tz":-300,"elapsed":46,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"b8bb5ac8-c64e-4448-bc51-4c0bcc5977a5"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Year  Population  Temp\n","0  2021        33.9  1.54\n","1  2020        33.5  1.48\n","2  2019        32.9  1.56\n","3  2018        32.5  1.62\n","4  2017        31.9  1.65"],"text/html":["\n","  <div id=\"df-8afdeba1-8a01-4ced-bbd9-b69a1228a240\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Population</th>\n","      <th>Temp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2021</td>\n","      <td>33.9</td>\n","      <td>1.54</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020</td>\n","      <td>33.5</td>\n","      <td>1.48</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2019</td>\n","      <td>32.9</td>\n","      <td>1.56</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2018</td>\n","      <td>32.5</td>\n","      <td>1.62</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2017</td>\n","      <td>31.9</td>\n","      <td>1.65</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8afdeba1-8a01-4ced-bbd9-b69a1228a240')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8afdeba1-8a01-4ced-bbd9-b69a1228a240 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8afdeba1-8a01-4ced-bbd9-b69a1228a240');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8005ef58-86e4-4c42-85ad-8c0a87fd9226\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8005ef58-86e4-4c42-85ad-8c0a87fd9226')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8005ef58-86e4-4c42-85ad-8c0a87fd9226 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 2010,\n        \"max\": 2021,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2020,\n          2016,\n          2021\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7204131563585034,\n        \"min\": 28.5,\n        \"max\": 33.9,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          33.5,\n          31.4,\n          33.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06633249580710797,\n        \"min\": 1.48,\n        \"max\": 1.66,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.48,\n          1.66,\n          1.54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a9LhhodTM7GR","executionInfo":{"status":"ok","timestamp":1708534801650,"user_tz":-300,"elapsed":44,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"4d279055-09bd-4f4a-dad4-3dfb2c9cc3fb"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(8, 3)"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df = DataFrame(data, columns=['Temp', 'Population', 'Year'])"],"metadata":{"id":"sVofrLVtNoHN","executionInfo":{"status":"ok","timestamp":1708534801650,"user_tz":-300,"elapsed":36,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"P4khK7xUPH5R","executionInfo":{"status":"ok","timestamp":1708534801650,"user_tz":-300,"elapsed":34,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"76ba8912-9490-48cb-844f-cc0993388ed9"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Temp  Population  Year\n","0  1.54        33.9  2021\n","1  1.48        33.5  2020\n","2  1.56        32.9  2019\n","3  1.62        32.5  2018\n","4  1.65        31.9  2017\n","5  1.66        31.4  2016\n","6  1.64        30.9  2015\n","7  1.53        28.5  2010"],"text/html":["\n","  <div id=\"df-3f16c583-0274-4f11-9a4e-908f64f4e9dc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Temp</th>\n","      <th>Population</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.54</td>\n","      <td>33.9</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.48</td>\n","      <td>33.5</td>\n","      <td>2020</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.56</td>\n","      <td>32.9</td>\n","      <td>2019</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.62</td>\n","      <td>32.5</td>\n","      <td>2018</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.65</td>\n","      <td>31.9</td>\n","      <td>2017</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1.66</td>\n","      <td>31.4</td>\n","      <td>2016</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1.64</td>\n","      <td>30.9</td>\n","      <td>2015</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1.53</td>\n","      <td>28.5</td>\n","      <td>2010</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3f16c583-0274-4f11-9a4e-908f64f4e9dc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3f16c583-0274-4f11-9a4e-908f64f4e9dc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3f16c583-0274-4f11-9a4e-908f64f4e9dc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-da6c4a43-a0a2-4659-a3b0-19f39cf58c20\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-da6c4a43-a0a2-4659-a3b0-19f39cf58c20')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-da6c4a43-a0a2-4659-a3b0-19f39cf58c20 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06633249580710797,\n        \"min\": 1.48,\n        \"max\": 1.66,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.48,\n          1.66,\n          1.54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7204131563585034,\n        \"min\": 28.5,\n        \"max\": 33.9,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          33.5,\n          31.4,\n          33.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 2010,\n        \"max\": 2021,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2020,\n          2016,\n          2021\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["  df['Population']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c-hopVytPP1X","executionInfo":{"status":"ok","timestamp":1708534801651,"user_tz":-300,"elapsed":32,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"7f408d9c-2245-4de2-cc78-b4b81a08f9c0"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    33.9\n","1    33.5\n","2    32.9\n","3    32.5\n","4    31.9\n","5    31.4\n","6    30.9\n","7    28.5\n","Name: Population, dtype: float64"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df.Population = 0"],"metadata":{"id":"CSgS1EDuUVHO","executionInfo":{"status":"ok","timestamp":1708534801651,"user_tz":-300,"elapsed":27,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"upH8Wtk7WEYs","executionInfo":{"status":"ok","timestamp":1708534801652,"user_tz":-300,"elapsed":27,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"f20b2157-3059-4897-ddd8-b0cc9683b2ca"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Temp  Population  Year\n","0  1.54           0  2021\n","1  1.48           0  2020\n","2  1.56           0  2019\n","3  1.62           0  2018\n","4  1.65           0  2017\n","5  1.66           0  2016\n","6  1.64           0  2015\n","7  1.53           0  2010"],"text/html":["\n","  <div id=\"df-97bc5b75-47de-41a3-9c81-709ac5dd1602\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Temp</th>\n","      <th>Population</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.54</td>\n","      <td>0</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.48</td>\n","      <td>0</td>\n","      <td>2020</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.56</td>\n","      <td>0</td>\n","      <td>2019</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.62</td>\n","      <td>0</td>\n","      <td>2018</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.65</td>\n","      <td>0</td>\n","      <td>2017</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1.66</td>\n","      <td>0</td>\n","      <td>2016</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1.64</td>\n","      <td>0</td>\n","      <td>2015</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1.53</td>\n","      <td>0</td>\n","      <td>2010</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97bc5b75-47de-41a3-9c81-709ac5dd1602')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-97bc5b75-47de-41a3-9c81-709ac5dd1602 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-97bc5b75-47de-41a3-9c81-709ac5dd1602');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d30d3ec2-ad69-42ab-91e8-7790e8333bf2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d30d3ec2-ad69-42ab-91e8-7790e8333bf2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d30d3ec2-ad69-42ab-91e8-7790e8333bf2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06633249580710797,\n        \"min\": 1.48,\n        \"max\": 1.66,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.48,\n          1.66,\n          1.54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 2010,\n        \"max\": 2021,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2020\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["val = pd.Series([1700, 1650, 1300], index=[1, 8, 5])"],"metadata":{"id":"yDGDPQZBWFMe","executionInfo":{"status":"ok","timestamp":1708534801652,"user_tz":-300,"elapsed":25,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["val"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NXvh1aZ2WOlp","executionInfo":{"status":"ok","timestamp":1708534801652,"user_tz":-300,"elapsed":24,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"11e72d49-412f-4feb-ad54-3e673b5cd315"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1    1700\n","8    1650\n","5    1300\n","dtype: int64"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["df.Population = val"],"metadata":{"id":"77u3mhTVWPE7","executionInfo":{"status":"ok","timestamp":1708534802108,"user_tz":-300,"elapsed":19,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"QoY2BcjdWVrC","executionInfo":{"status":"ok","timestamp":1708534802109,"user_tz":-300,"elapsed":19,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"1d884e2b-1a65-490d-85af-ff721f81329d"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Temp  Population  Year\n","0  1.54         NaN  2021\n","1  1.48      1700.0  2020\n","2  1.56         NaN  2019\n","3  1.62         NaN  2018\n","4  1.65         NaN  2017\n","5  1.66      1300.0  2016\n","6  1.64         NaN  2015\n","7  1.53         NaN  2010"],"text/html":["\n","  <div id=\"df-ba05f982-d6ed-470f-ac9a-2f7b96eac604\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Temp</th>\n","      <th>Population</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.54</td>\n","      <td>NaN</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.48</td>\n","      <td>1700.0</td>\n","      <td>2020</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.56</td>\n","      <td>NaN</td>\n","      <td>2019</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.62</td>\n","      <td>NaN</td>\n","      <td>2018</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.65</td>\n","      <td>NaN</td>\n","      <td>2017</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1.66</td>\n","      <td>1300.0</td>\n","      <td>2016</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1.64</td>\n","      <td>NaN</td>\n","      <td>2015</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1.53</td>\n","      <td>NaN</td>\n","      <td>2010</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ba05f982-d6ed-470f-ac9a-2f7b96eac604')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ba05f982-d6ed-470f-ac9a-2f7b96eac604 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ba05f982-d6ed-470f-ac9a-2f7b96eac604');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-069b0665-a7c5-470d-85d3-67debeef8ef2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-069b0665-a7c5-470d-85d3-67debeef8ef2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-069b0665-a7c5-470d-85d3-67debeef8ef2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06633249580710797,\n        \"min\": 1.48,\n        \"max\": 1.66,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.48,\n          1.66,\n          1.54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 282.842712474619,\n        \"min\": 1300.0,\n        \"max\": 1700.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1300.0,\n          1700.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 2010,\n        \"max\": 2021,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2020,\n          2016\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["data = {\n","    'Toyota': {'Camry': 25000, 'Corolla': 20000, 'Rav4': 30000},\n","    'Honda': {'Civic': 22000, 'Accord': 28000, 'CR-V': 32000},\n","    'Ford': {'Fusion': 24000, 'Escape': 28000, 'Explorer': 35000}\n","}"],"metadata":{"id":"yNlma7U2WeNx","executionInfo":{"status":"ok","timestamp":1708534802109,"user_tz":-300,"elapsed":17,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["df2 = pd.DataFrame(data)"],"metadata":{"id":"cYojMi56Y1I8","executionInfo":{"status":"ok","timestamp":1708534802109,"user_tz":-300,"elapsed":17,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331},"id":"2OjEVHDQY-_l","executionInfo":{"status":"ok","timestamp":1708534802110,"user_tz":-300,"elapsed":17,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"38b08842-ceb8-4bc6-fa9e-e765630a00e1"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Toyota    Honda     Ford\n","Camry     25000.0      NaN      NaN\n","Corolla   20000.0      NaN      NaN\n","Rav4      30000.0      NaN      NaN\n","Civic         NaN  22000.0      NaN\n","Accord        NaN  28000.0      NaN\n","CR-V          NaN  32000.0      NaN\n","Fusion        NaN      NaN  24000.0\n","Escape        NaN      NaN  28000.0\n","Explorer      NaN      NaN  35000.0"],"text/html":["\n","  <div id=\"df-3ea34222-9f51-42ad-a992-f22660bfdbfa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Toyota</th>\n","      <th>Honda</th>\n","      <th>Ford</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Camry</th>\n","      <td>25000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Corolla</th>\n","      <td>20000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Rav4</th>\n","      <td>30000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Civic</th>\n","      <td>NaN</td>\n","      <td>22000.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Accord</th>\n","      <td>NaN</td>\n","      <td>28000.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>CR-V</th>\n","      <td>NaN</td>\n","      <td>32000.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Fusion</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>24000.0</td>\n","    </tr>\n","    <tr>\n","      <th>Escape</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>28000.0</td>\n","    </tr>\n","    <tr>\n","      <th>Explorer</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>35000.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ea34222-9f51-42ad-a992-f22660bfdbfa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3ea34222-9f51-42ad-a992-f22660bfdbfa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3ea34222-9f51-42ad-a992-f22660bfdbfa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fd5657d9-9a48-42cd-ac86-526600eaa7a2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fd5657d9-9a48-42cd-ac86-526600eaa7a2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fd5657d9-9a48-42cd-ac86-526600eaa7a2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df2","summary":"{\n  \"name\": \"df2\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"Toyota\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5000.0,\n        \"min\": 20000.0,\n        \"max\": 30000.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          25000.0,\n          20000.0,\n          30000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Honda\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5033.222956847167,\n        \"min\": 22000.0,\n        \"max\": 32000.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          22000.0,\n          28000.0,\n          32000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ford\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5567.764362830022,\n        \"min\": 24000.0,\n        \"max\": 35000.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          24000.0,\n          28000.0,\n          35000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331},"id":"5MRnhLj9ZACj","executionInfo":{"status":"ok","timestamp":1708534802110,"user_tz":-300,"elapsed":15,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"6c386b35-788e-49d8-d9e3-8d062458e066"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Toyota    Honda     Ford\n","Camry     25000.0      NaN      NaN\n","Corolla   20000.0      NaN      NaN\n","Rav4      30000.0      NaN      NaN\n","Civic         NaN  22000.0      NaN\n","Accord        NaN  28000.0      NaN\n","CR-V          NaN  32000.0      NaN\n","Fusion        NaN      NaN  24000.0\n","Escape        NaN      NaN  28000.0\n","Explorer      NaN      NaN  35000.0"],"text/html":["\n","  <div id=\"df-ab29bf93-440a-4ad6-a918-0e4097ae825e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Toyota</th>\n","      <th>Honda</th>\n","      <th>Ford</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Camry</th>\n","      <td>25000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Corolla</th>\n","      <td>20000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Rav4</th>\n","      <td>30000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Civic</th>\n","      <td>NaN</td>\n","      <td>22000.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Accord</th>\n","      <td>NaN</td>\n","      <td>28000.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>CR-V</th>\n","      <td>NaN</td>\n","      <td>32000.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Fusion</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>24000.0</td>\n","    </tr>\n","    <tr>\n","      <th>Escape</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>28000.0</td>\n","    </tr>\n","    <tr>\n","      <th>Explorer</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>35000.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ab29bf93-440a-4ad6-a918-0e4097ae825e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ab29bf93-440a-4ad6-a918-0e4097ae825e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ab29bf93-440a-4ad6-a918-0e4097ae825e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9e81835d-9d04-4f1f-8553-f78ef31b8d15\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9e81835d-9d04-4f1f-8553-f78ef31b8d15')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9e81835d-9d04-4f1f-8553-f78ef31b8d15 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df2","summary":"{\n  \"name\": \"df2\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"Toyota\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5000.0,\n        \"min\": 20000.0,\n        \"max\": 30000.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          25000.0,\n          20000.0,\n          30000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Honda\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5033.222956847167,\n        \"min\": 22000.0,\n        \"max\": 32000.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          22000.0,\n          28000.0,\n          32000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ford\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5567.764362830022,\n        \"min\": 24000.0,\n        \"max\": 35000.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          24000.0,\n          28000.0,\n          35000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["arr = df2.values"],"metadata":{"id":"udzMQbkecCmN","executionInfo":{"status":"ok","timestamp":1708534802110,"user_tz":-300,"elapsed":12,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["arr"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BkJxrVuAcZWK","executionInfo":{"status":"ok","timestamp":1708534802591,"user_tz":-300,"elapsed":493,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"c0ee5647-71ef-420c-f185-18c81cd9643d"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[25000.,    nan,    nan],\n","       [20000.,    nan,    nan],\n","       [30000.,    nan,    nan],\n","       [   nan, 22000.,    nan],\n","       [   nan, 28000.,    nan],\n","       [   nan, 32000.,    nan],\n","       [   nan,    nan, 24000.],\n","       [   nan,    nan, 28000.],\n","       [   nan,    nan, 35000.]])"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["type(arr)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fjq4Y8bWceIr","executionInfo":{"status":"ok","timestamp":1708534802591,"user_tz":-300,"elapsed":34,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"979d02fc-e1ec-4d4e-e1c4-3ebbf881e509"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["numpy.ndarray"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["df"],"metadata":{"id":"qzrp5642chWE","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1708534802592,"user_tz":-300,"elapsed":29,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"dde1d70d-d5e4-4a81-aa44-aa276a74c5d6"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Temp  Population  Year\n","0  1.54         NaN  2021\n","1  1.48      1700.0  2020\n","2  1.56         NaN  2019\n","3  1.62         NaN  2018\n","4  1.65         NaN  2017\n","5  1.66      1300.0  2016\n","6  1.64         NaN  2015\n","7  1.53         NaN  2010"],"text/html":["\n","  <div id=\"df-9d6116fa-58ed-4420-b376-2ad6a79a7b92\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Temp</th>\n","      <th>Population</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.54</td>\n","      <td>NaN</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.48</td>\n","      <td>1700.0</td>\n","      <td>2020</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.56</td>\n","      <td>NaN</td>\n","      <td>2019</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.62</td>\n","      <td>NaN</td>\n","      <td>2018</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.65</td>\n","      <td>NaN</td>\n","      <td>2017</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1.66</td>\n","      <td>1300.0</td>\n","      <td>2016</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1.64</td>\n","      <td>NaN</td>\n","      <td>2015</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1.53</td>\n","      <td>NaN</td>\n","      <td>2010</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d6116fa-58ed-4420-b376-2ad6a79a7b92')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9d6116fa-58ed-4420-b376-2ad6a79a7b92 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9d6116fa-58ed-4420-b376-2ad6a79a7b92');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-69656e1a-7907-4eac-b750-06499aa21e58\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-69656e1a-7907-4eac-b750-06499aa21e58')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-69656e1a-7907-4eac-b750-06499aa21e58 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06633249580710797,\n        \"min\": 1.48,\n        \"max\": 1.66,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.48,\n          1.66,\n          1.54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 282.842712474619,\n        \"min\": 1300.0,\n        \"max\": 1700.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1300.0,\n          1700.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 2010,\n        \"max\": 2021,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2020,\n          2016\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331},"id":"iCw7inilHInA","executionInfo":{"status":"ok","timestamp":1708534802592,"user_tz":-300,"elapsed":27,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"4cdb06f1-a794-4183-f2f7-551ee4af9969"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Toyota    Honda     Ford\n","Camry     25000.0      NaN      NaN\n","Corolla   20000.0      NaN      NaN\n","Rav4      30000.0      NaN      NaN\n","Civic         NaN  22000.0      NaN\n","Accord        NaN  28000.0      NaN\n","CR-V          NaN  32000.0      NaN\n","Fusion        NaN      NaN  24000.0\n","Escape        NaN      NaN  28000.0\n","Explorer      NaN      NaN  35000.0"],"text/html":["\n","  <div id=\"df-cd5e74c2-0b06-4020-b957-b8d09cec5ba8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Toyota</th>\n","      <th>Honda</th>\n","      <th>Ford</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Camry</th>\n","      <td>25000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Corolla</th>\n","      <td>20000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Rav4</th>\n","      <td>30000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Civic</th>\n","      <td>NaN</td>\n","      <td>22000.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Accord</th>\n","      <td>NaN</td>\n","      <td>28000.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>CR-V</th>\n","      <td>NaN</td>\n","      <td>32000.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Fusion</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>24000.0</td>\n","    </tr>\n","    <tr>\n","      <th>Escape</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>28000.0</td>\n","    </tr>\n","    <tr>\n","      <th>Explorer</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>35000.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cd5e74c2-0b06-4020-b957-b8d09cec5ba8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cd5e74c2-0b06-4020-b957-b8d09cec5ba8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cd5e74c2-0b06-4020-b957-b8d09cec5ba8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-16d6e585-5b75-4c1f-b959-7f2289fc3ba2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-16d6e585-5b75-4c1f-b959-7f2289fc3ba2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-16d6e585-5b75-4c1f-b959-7f2289fc3ba2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df2","summary":"{\n  \"name\": \"df2\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"Toyota\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5000.0,\n        \"min\": 20000.0,\n        \"max\": 30000.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          25000.0,\n          20000.0,\n          30000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Honda\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5033.222956847167,\n        \"min\": 22000.0,\n        \"max\": 32000.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          22000.0,\n          28000.0,\n          32000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ford\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5567.764362830022,\n        \"min\": 24000.0,\n        \"max\": 35000.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          24000.0,\n          28000.0,\n          35000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["df2.index"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sHUKo_1fHL14","executionInfo":{"status":"ok","timestamp":1708534802593,"user_tz":-300,"elapsed":27,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"d4c38ed1-8d08-455d-fa2d-c5f30d99e8d5"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Camry', 'Corolla', 'Rav4', 'Civic', 'Accord', 'CR-V', 'Fusion',\n","       'Escape', 'Explorer'],\n","      dtype='object')"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["df2.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7m3NLASTHZQY","executionInfo":{"status":"ok","timestamp":1708534802594,"user_tz":-300,"elapsed":25,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"a2c269a1-a1c7-43c5-e7a2-c91299e679cf"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Toyota', 'Honda', 'Ford'], dtype='object')"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["data = {\n","    'Brand': ['Toyota', 'Honda', 'Ford', 'Chevrolet', 'Tesla'],\n","    'Model': ['Camry', 'Civic', 'Mustang', 'Silverado', 'Model S'],\n","    'Year': [2019, 2020, 2021, 2018, 2022],\n","    'Mileage': [30000, 25000, 15000, 40000, 10000],\n","    'Price': [25000, 22000, 35000, 40000, 75000]\n","}\n","df3 = DataFrame(data)"],"metadata":{"id":"lWmbzyPyHdze","executionInfo":{"status":"ok","timestamp":1708534802596,"user_tz":-300,"elapsed":24,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["df3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"jT9jiF6qH3G5","executionInfo":{"status":"ok","timestamp":1708534802597,"user_tz":-300,"elapsed":25,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"74aef6b6-7c50-49a0-8508-3cf5dfe4cbb5"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Brand      Model  Year  Mileage  Price\n","0     Toyota      Camry  2019    30000  25000\n","1      Honda      Civic  2020    25000  22000\n","2       Ford    Mustang  2021    15000  35000\n","3  Chevrolet  Silverado  2018    40000  40000\n","4      Tesla    Model S  2022    10000  75000"],"text/html":["\n","  <div id=\"df-d4b5c3d0-1a7e-4b9a-ad07-2b6a8f4e42ee\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Brand</th>\n","      <th>Model</th>\n","      <th>Year</th>\n","      <th>Mileage</th>\n","      <th>Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Toyota</td>\n","      <td>Camry</td>\n","      <td>2019</td>\n","      <td>30000</td>\n","      <td>25000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Honda</td>\n","      <td>Civic</td>\n","      <td>2020</td>\n","      <td>25000</td>\n","      <td>22000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Ford</td>\n","      <td>Mustang</td>\n","      <td>2021</td>\n","      <td>15000</td>\n","      <td>35000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Chevrolet</td>\n","      <td>Silverado</td>\n","      <td>2018</td>\n","      <td>40000</td>\n","      <td>40000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Tesla</td>\n","      <td>Model S</td>\n","      <td>2022</td>\n","      <td>10000</td>\n","      <td>75000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d4b5c3d0-1a7e-4b9a-ad07-2b6a8f4e42ee')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d4b5c3d0-1a7e-4b9a-ad07-2b6a8f4e42ee button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d4b5c3d0-1a7e-4b9a-ad07-2b6a8f4e42ee');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4b9cb77a-8550-472d-ab61-f78076a2eced\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4b9cb77a-8550-472d-ab61-f78076a2eced')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4b9cb77a-8550-472d-ab61-f78076a2eced button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df3","summary":"{\n  \"name\": \"df3\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Brand\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Honda\",\n          \"Tesla\",\n          \"Ford\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Model\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Civic\",\n          \"Model S\",\n          \"Mustang\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2018,\n        \"max\": 2022,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2020,\n          2022,\n          2021\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mileage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11937,\n        \"min\": 10000,\n        \"max\": 40000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          25000,\n          10000,\n          15000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21196,\n        \"min\": 22000,\n        \"max\": 75000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          22000,\n          75000,\n          35000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["columns = df3.columns"],"metadata":{"id":"X1jA1MZ1H4K2","executionInfo":{"status":"ok","timestamp":1708534802597,"user_tz":-300,"elapsed":24,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YjcjaUGTIIx5","executionInfo":{"status":"ok","timestamp":1708534802598,"user_tz":-300,"elapsed":24,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"c487d401-3678-408e-840d-6690f3e046e2"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Brand', 'Model', 'Year', 'Mileage', 'Price'], dtype='object')"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["\"Brand\" in columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"obJjMjhsIJsE","executionInfo":{"status":"ok","timestamp":1708534802989,"user_tz":-300,"elapsed":17,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"146c9176-b1ef-4f5f-8237-12a58b02644f"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["columns[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"7i2ovAFyIS5w","executionInfo":{"status":"ok","timestamp":1708534802990,"user_tz":-300,"elapsed":15,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"398ee1fd-ef15-4fd4-b6d8-ad6c5e698e96"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Brand'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["columns[0] = \"Bra\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":263},"id":"TzR6HvaAI1KD","executionInfo":{"status":"error","timestamp":1708534803645,"user_tz":-300,"elapsed":20,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"fa5cbe1a-671d-4593-ebad-19bccd835eaa"},"execution_count":35,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"Index does not support mutable operations","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-35-7f23c952f9d9>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mcolumns\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"Bra\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m__setitem__\u001b[0;34m(self, key, value)\u001b[0m\n\u001b[1;32m   5300\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mfinal\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5301\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__setitem__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5302\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Index does not support mutable operations\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5303\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5304\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__getitem__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: Index does not support mutable operations"]}]},{"cell_type":"code","source":["df3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"MYwuRq2HI5Sd","executionInfo":{"status":"ok","timestamp":1708534803645,"user_tz":-300,"elapsed":14,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"7767a1d5-6bf8-40ec-8e74-a6099327578e"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Brand      Model  Year  Mileage  Price\n","0     Toyota      Camry  2019    30000  25000\n","1      Honda      Civic  2020    25000  22000\n","2       Ford    Mustang  2021    15000  35000\n","3  Chevrolet  Silverado  2018    40000  40000\n","4      Tesla    Model S  2022    10000  75000"],"text/html":["\n","  <div id=\"df-2022e9e7-8e78-4298-8cad-f2abd3486656\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Brand</th>\n","      <th>Model</th>\n","      <th>Year</th>\n","      <th>Mileage</th>\n","      <th>Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Toyota</td>\n","      <td>Camry</td>\n","      <td>2019</td>\n","      <td>30000</td>\n","      <td>25000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Honda</td>\n","      <td>Civic</td>\n","      <td>2020</td>\n","      <td>25000</td>\n","      <td>22000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Ford</td>\n","      <td>Mustang</td>\n","      <td>2021</td>\n","      <td>15000</td>\n","      <td>35000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Chevrolet</td>\n","      <td>Silverado</td>\n","      <td>2018</td>\n","      <td>40000</td>\n","      <td>40000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Tesla</td>\n","      <td>Model S</td>\n","      <td>2022</td>\n","      <td>10000</td>\n","      <td>75000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2022e9e7-8e78-4298-8cad-f2abd3486656')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2022e9e7-8e78-4298-8cad-f2abd3486656 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2022e9e7-8e78-4298-8cad-f2abd3486656');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-89c93181-4cf3-45e2-b2bb-4b6df38c25af\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-89c93181-4cf3-45e2-b2bb-4b6df38c25af')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-89c93181-4cf3-45e2-b2bb-4b6df38c25af button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df3","summary":"{\n  \"name\": \"df3\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Brand\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Honda\",\n          \"Tesla\",\n          \"Ford\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Model\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Civic\",\n          \"Model S\",\n          \"Mustang\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2018,\n        \"max\": 2022,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2020,\n          2022,\n          2021\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mileage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11937,\n        \"min\": 10000,\n        \"max\": 40000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          25000,\n          10000,\n          15000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21196,\n        \"min\": 22000,\n        \"max\": 75000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          22000,\n          75000,\n          35000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["df"],"metadata":{"id":"hnhlsZWWK2kj","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1708534803962,"user_tz":-300,"elapsed":11,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"f5ed2c34-4bee-4a0a-af8f-8dd7802fe472"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Temp  Population  Year\n","0  1.54         NaN  2021\n","1  1.48      1700.0  2020\n","2  1.56         NaN  2019\n","3  1.62         NaN  2018\n","4  1.65         NaN  2017\n","5  1.66      1300.0  2016\n","6  1.64         NaN  2015\n","7  1.53         NaN  2010"],"text/html":["\n","  <div id=\"df-e1b96d66-d80c-4e5f-af3b-8329093d8e2b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Temp</th>\n","      <th>Population</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.54</td>\n","      <td>NaN</td>\n","      <td>2021</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.48</td>\n","      <td>1700.0</td>\n","      <td>2020</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.56</td>\n","      <td>NaN</td>\n","      <td>2019</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.62</td>\n","      <td>NaN</td>\n","      <td>2018</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.65</td>\n","      <td>NaN</td>\n","      <td>2017</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1.66</td>\n","      <td>1300.0</td>\n","      <td>2016</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1.64</td>\n","      <td>NaN</td>\n","      <td>2015</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1.53</td>\n","      <td>NaN</td>\n","      <td>2010</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e1b96d66-d80c-4e5f-af3b-8329093d8e2b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e1b96d66-d80c-4e5f-af3b-8329093d8e2b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e1b96d66-d80c-4e5f-af3b-8329093d8e2b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f0dc0575-cb54-4fac-9c1c-5901e1df88a4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f0dc0575-cb54-4fac-9c1c-5901e1df88a4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f0dc0575-cb54-4fac-9c1c-5901e1df88a4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06633249580710797,\n        \"min\": 1.48,\n        \"max\": 1.66,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.48,\n          1.66,\n          1.54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Population\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 282.842712474619,\n        \"min\": 1300.0,\n        \"max\": 1700.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1300.0,\n          1700.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 2010,\n        \"max\": 2021,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2020,\n          2016\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331},"id":"dFgAoOEmm8JH","executionInfo":{"status":"ok","timestamp":1708534803962,"user_tz":-300,"elapsed":9,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"14a77e29-94c0-430f-dc17-e5adb02f8c73"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Toyota    Honda     Ford\n","Camry     25000.0      NaN      NaN\n","Corolla   20000.0      NaN      NaN\n","Rav4      30000.0      NaN      NaN\n","Civic         NaN  22000.0      NaN\n","Accord        NaN  28000.0      NaN\n","CR-V          NaN  32000.0      NaN\n","Fusion        NaN      NaN  24000.0\n","Escape        NaN      NaN  28000.0\n","Explorer      NaN      NaN  35000.0"],"text/html":["\n","  <div id=\"df-7ec642a4-710d-440b-a7c2-a9f7765394e4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Toyota</th>\n","      <th>Honda</th>\n","      <th>Ford</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Camry</th>\n","      <td>25000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Corolla</th>\n","      <td>20000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Rav4</th>\n","      <td>30000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Civic</th>\n","      <td>NaN</td>\n","      <td>22000.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Accord</th>\n","      <td>NaN</td>\n","      <td>28000.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>CR-V</th>\n","      <td>NaN</td>\n","      <td>32000.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Fusion</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>24000.0</td>\n","    </tr>\n","    <tr>\n","      <th>Escape</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>28000.0</td>\n","    </tr>\n","    <tr>\n","      <th>Explorer</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>35000.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7ec642a4-710d-440b-a7c2-a9f7765394e4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7ec642a4-710d-440b-a7c2-a9f7765394e4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7ec642a4-710d-440b-a7c2-a9f7765394e4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-85cdc8b3-3695-4195-a8c2-fcd7c7311247\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-85cdc8b3-3695-4195-a8c2-fcd7c7311247')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-85cdc8b3-3695-4195-a8c2-fcd7c7311247 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df2","summary":"{\n  \"name\": \"df2\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"Toyota\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5000.0,\n        \"min\": 20000.0,\n        \"max\": 30000.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          25000.0,\n          20000.0,\n          30000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Honda\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5033.222956847167,\n        \"min\": 22000.0,\n        \"max\": 32000.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          22000.0,\n          28000.0,\n          32000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ford\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5567.764362830022,\n        \"min\": 24000.0,\n        \"max\": 35000.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          24000.0,\n          28000.0,\n          35000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["df2.index"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dVX1DREMm9_p","executionInfo":{"status":"ok","timestamp":1708534816477,"user_tz":-300,"elapsed":18,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"56bf317c-951b-4ebf-c5fe-3bbadb9629cb"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Camry', 'Corolla', 'Rav4', 'Civic', 'Accord', 'CR-V', 'Fusion',\n","       'Escape', 'Explorer'],\n","      dtype='object')"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["arr = ['Camry', 'Corolla', 'Rav4', 'Civic', 'Accord', 'CR-V', 'Fusion',\n","       'Escape', 'Explorer']"],"metadata":{"id":"BprTic5unFt_","executionInfo":{"status":"ok","timestamp":1708534855984,"user_tz":-300,"elapsed":315,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["arr[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"0-hDO9PXnPT4","executionInfo":{"status":"ok","timestamp":1708534868001,"user_tz":-300,"elapsed":8,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"aec58192-25a7-4bbe-e441-99a21f1b1ecc"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Camry'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["arr[1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"peGj3XQXnSSQ","executionInfo":{"status":"ok","timestamp":1708534872113,"user_tz":-300,"elapsed":11,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"02964e23-8098-408c-a570-5e996d5991ec"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Corolla'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["data2 = {\n","    'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eva'],\n","    'Age': [25, 30, 22, 35, 28],\n","    'City': ['New York', 'San Francisco', 'Los Angeles', 'Chicago', 'Seattle'],\n","    'Salary': [60000, 80000, 55000, 90000, 70000]\n","}"],"metadata":{"id":"loafVVARnTT4","executionInfo":{"status":"ok","timestamp":1708535012857,"user_tz":-300,"elapsed":325,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["df2.append(pd.DataFrame(data2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":523},"id":"D2L6qRLEn1k8","executionInfo":{"status":"ok","timestamp":1708535066937,"user_tz":-300,"elapsed":296,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"41dc702f-eb67-4965-bf2f-f46241af0f93"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-45-4db815ea3001>:1: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  df2.append(pd.DataFrame(data2))\n"]},{"output_type":"execute_result","data":{"text/plain":["           Toyota    Honda     Ford     Name   Age           City   Salary\n","Camry     25000.0      NaN      NaN      NaN   NaN            NaN      NaN\n","Corolla   20000.0      NaN      NaN      NaN   NaN            NaN      NaN\n","Rav4      30000.0      NaN      NaN      NaN   NaN            NaN      NaN\n","Civic         NaN  22000.0      NaN      NaN   NaN            NaN      NaN\n","Accord        NaN  28000.0      NaN      NaN   NaN            NaN      NaN\n","CR-V          NaN  32000.0      NaN      NaN   NaN            NaN      NaN\n","Fusion        NaN      NaN  24000.0      NaN   NaN            NaN      NaN\n","Escape        NaN      NaN  28000.0      NaN   NaN            NaN      NaN\n","Explorer      NaN      NaN  35000.0      NaN   NaN            NaN      NaN\n","0             NaN      NaN      NaN    Alice  25.0       New York  60000.0\n","1             NaN      NaN      NaN      Bob  30.0  San Francisco  80000.0\n","2             NaN      NaN      NaN  Charlie  22.0    Los Angeles  55000.0\n","3             NaN      NaN      NaN    David  35.0        Chicago  90000.0\n","4             NaN      NaN      NaN      Eva  28.0        Seattle  70000.0"],"text/html":["\n","  <div id=\"df-587815cb-9a87-48f1-8b0f-a2368bc9dcfa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Toyota</th>\n","      <th>Honda</th>\n","      <th>Ford</th>\n","      <th>Name</th>\n","      <th>Age</th>\n","      <th>City</th>\n","      <th>Salary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Camry</th>\n","      <td>25000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Corolla</th>\n","      <td>20000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Rav4</th>\n","      <td>30000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Civic</th>\n","      <td>NaN</td>\n","      <td>22000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Accord</th>\n","      <td>NaN</td>\n","      <td>28000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>CR-V</th>\n","      <td>NaN</td>\n","      <td>32000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Fusion</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>24000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Escape</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>28000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Explorer</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>35000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Alice</td>\n","      <td>25.0</td>\n","      <td>New York</td>\n","      <td>60000.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Bob</td>\n","      <td>30.0</td>\n","      <td>San Francisco</td>\n","      <td>80000.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Charlie</td>\n","      <td>22.0</td>\n","      <td>Los Angeles</td>\n","      <td>55000.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>David</td>\n","      <td>35.0</td>\n","      <td>Chicago</td>\n","      <td>90000.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Eva</td>\n","      <td>28.0</td>\n","      <td>Seattle</td>\n","      <td>70000.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-587815cb-9a87-48f1-8b0f-a2368bc9dcfa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-587815cb-9a87-48f1-8b0f-a2368bc9dcfa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-587815cb-9a87-48f1-8b0f-a2368bc9dcfa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-90a4a817-3468-4062-bf01-6ecdf51e90b5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-90a4a817-3468-4062-bf01-6ecdf51e90b5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-90a4a817-3468-4062-bf01-6ecdf51e90b5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df2\",\n  \"rows\": 14,\n  \"fields\": [\n    {\n      \"column\": \"Toyota\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5000.0,\n        \"min\": 20000.0,\n        \"max\": 30000.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          25000.0,\n          20000.0,\n          30000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Honda\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5033.222956847167,\n        \"min\": 22000.0,\n        \"max\": 32000.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          22000.0,\n          28000.0,\n          32000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ford\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5567.764362830022,\n        \"min\": 24000.0,\n        \"max\": 35000.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          24000.0,\n          28000.0,\n          35000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Bob\",\n          \"Eva\",\n          \"Charlie\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.949747468305833,\n        \"min\": 22.0,\n        \"max\": 35.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          30.0,\n          28.0,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"San Francisco\",\n          \"Seattle\",\n          \"Los Angeles\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14317.821063276353,\n        \"min\": 55000.0,\n        \"max\": 90000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          80000.0,\n          70000.0,\n          55000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["data = {\n","    \"email\": ['ami@example.com', 'ant@example.com', 'joh@example.com', 'emi@example.com', 'sop@example.com', 'dav@example.com', 'oli@example.com', 'lia@example.com', 'emm@example.com', 'mat@example.com'],\n","    \"age\": [29, 42, 55, 23, 31, 46, 38, 49, 20, 27],\n","    \"first_name\": ['John', 'Emily', 'Michael', 'Sophia', 'Daniel', 'Jessica', 'Brian', 'Olivia', 'Matthew', 'Isabella'],\n","    \"last_name\": ['Smith', 'Johnson', 'Williams', 'Brown', 'Jones', 'Miller', 'Davis', 'Garcia', 'Rodriguez', 'Martinez']\n","}\n","\n","dfe = pd.DataFrame(data, index=['amirbek', 'anton', 'john', 'emily', 'sophia', 'david', 'olivia', 'liam', 'emma', 'matthew'])"],"metadata":{"id":"OA6RKc-5n7Kf","executionInfo":{"status":"ok","timestamp":1708535853600,"user_tz":-300,"elapsed":271,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["dfe"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"4Gi0HhxiqgRx","executionInfo":{"status":"ok","timestamp":1708535854444,"user_tz":-300,"elapsed":500,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"3131608a-8417-46e3-fc9c-f78b18b05b14"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   email  age first_name  last_name\n","amirbek  ami@example.com   29       John      Smith\n","anton    ant@example.com   42      Emily    Johnson\n","john     joh@example.com   55    Michael   Williams\n","emily    emi@example.com   23     Sophia      Brown\n","sophia   sop@example.com   31     Daniel      Jones\n","david    dav@example.com   46    Jessica     Miller\n","olivia   oli@example.com   38      Brian      Davis\n","liam     lia@example.com   49     Olivia     Garcia\n","emma     emm@example.com   20    Matthew  Rodriguez\n","matthew  mat@example.com   27   Isabella   Martinez"],"text/html":["\n","  <div id=\"df-5001df67-d481-46b5-977d-d4aa3c97c6de\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>email</th>\n","      <th>age</th>\n","      <th>first_name</th>\n","      <th>last_name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>amirbek</th>\n","      <td>ami@example.com</td>\n","      <td>29</td>\n","      <td>John</td>\n","      <td>Smith</td>\n","    </tr>\n","    <tr>\n","      <th>anton</th>\n","      <td>ant@example.com</td>\n","      <td>42</td>\n","      <td>Emily</td>\n","      <td>Johnson</td>\n","    </tr>\n","    <tr>\n","      <th>john</th>\n","      <td>joh@example.com</td>\n","      <td>55</td>\n","      <td>Michael</td>\n","      <td>Williams</td>\n","    </tr>\n","    <tr>\n","      <th>emily</th>\n","      <td>emi@example.com</td>\n","      <td>23</td>\n","      <td>Sophia</td>\n","      <td>Brown</td>\n","    </tr>\n","    <tr>\n","      <th>sophia</th>\n","      <td>sop@example.com</td>\n","      <td>31</td>\n","      <td>Daniel</td>\n","      <td>Jones</td>\n","    </tr>\n","    <tr>\n","      <th>david</th>\n","      <td>dav@example.com</td>\n","      <td>46</td>\n","      <td>Jessica</td>\n","      <td>Miller</td>\n","    </tr>\n","    <tr>\n","      <th>olivia</th>\n","      <td>oli@example.com</td>\n","      <td>38</td>\n","      <td>Brian</td>\n","      <td>Davis</td>\n","    </tr>\n","    <tr>\n","      <th>liam</th>\n","      <td>lia@example.com</td>\n","      <td>49</td>\n","      <td>Olivia</td>\n","      <td>Garcia</td>\n","    </tr>\n","    <tr>\n","      <th>emma</th>\n","      <td>emm@example.com</td>\n","      <td>20</td>\n","      <td>Matthew</td>\n","      <td>Rodriguez</td>\n","    </tr>\n","    <tr>\n","      <th>matthew</th>\n","      <td>mat@example.com</td>\n","      <td>27</td>\n","      <td>Isabella</td>\n","      <td>Martinez</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5001df67-d481-46b5-977d-d4aa3c97c6de')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5001df67-d481-46b5-977d-d4aa3c97c6de button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5001df67-d481-46b5-977d-d4aa3c97c6de');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-757d0966-e99c-47a5-bb39-9e80037b1dff\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-757d0966-e99c-47a5-bb39-9e80037b1dff')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-757d0966-e99c-47a5-bb39-9e80037b1dff button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dfe","summary":"{\n  \"name\": \"dfe\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"email\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"emm@example.com\",\n          \"ant@example.com\",\n          \"dav@example.com\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 20,\n        \"max\": 55,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          20,\n          42,\n          46\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"first_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Matthew\",\n          \"Emily\",\n          \"Jessica\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"last_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"Rodriguez\",\n          \"Johnson\",\n          \"Miller\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["data2 = {\n","    \"email\":{\"anton\": \"anto@example.com\"},\n","    \"age\": {'anton':14},\n","    'first_name':{\"anton\":'antonello'},\n","    'last_name':{\"anton\":'antonello'}\n","}"],"metadata":{"id":"n4LPsmXQq0sR","executionInfo":{"status":"ok","timestamp":1708536478838,"user_tz":-300,"elapsed":317,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}}},"execution_count":54,"outputs":[]},{"cell_type":"code","source":["dfe = dfe.append(pd.DataFrame(data2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DmWXPBE5r5D8","executionInfo":{"status":"ok","timestamp":1708536586158,"user_tz":-300,"elapsed":356,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"9e412b41-89da-44c1-ac76-6739ded1510a"},"execution_count":55,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-55-d99733e77c11>:1: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  dfe = dfe.append(pd.DataFrame(data2))\n"]}]},{"cell_type":"code","source":["dfe"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"UsxCb9hIt1m1","executionInfo":{"status":"ok","timestamp":1708536587102,"user_tz":-300,"elapsed":7,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"c33ccf75-3802-463b-999e-719e7ca87dbd"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    email  age first_name  last_name\n","amirbek   ami@example.com   29       John      Smith\n","anton     ant@example.com   42      Emily    Johnson\n","john      joh@example.com   55    Michael   Williams\n","emily     emi@example.com   23     Sophia      Brown\n","sophia    sop@example.com   31     Daniel      Jones\n","david     dav@example.com   46    Jessica     Miller\n","olivia    oli@example.com   38      Brian      Davis\n","liam      lia@example.com   49     Olivia     Garcia\n","emma      emm@example.com   20    Matthew  Rodriguez\n","matthew   mat@example.com   27   Isabella   Martinez\n","anton    anto@example.com   14  antonello  antonello"],"text/html":["\n","  <div id=\"df-b3f7a06c-0dc5-43ff-97c3-1c8c2bc4d4ef\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>email</th>\n","      <th>age</th>\n","      <th>first_name</th>\n","      <th>last_name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>amirbek</th>\n","      <td>ami@example.com</td>\n","      <td>29</td>\n","      <td>John</td>\n","      <td>Smith</td>\n","    </tr>\n","    <tr>\n","      <th>anton</th>\n","      <td>ant@example.com</td>\n","      <td>42</td>\n","      <td>Emily</td>\n","      <td>Johnson</td>\n","    </tr>\n","    <tr>\n","      <th>john</th>\n","      <td>joh@example.com</td>\n","      <td>55</td>\n","      <td>Michael</td>\n","      <td>Williams</td>\n","    </tr>\n","    <tr>\n","      <th>emily</th>\n","      <td>emi@example.com</td>\n","      <td>23</td>\n","      <td>Sophia</td>\n","      <td>Brown</td>\n","    </tr>\n","    <tr>\n","      <th>sophia</th>\n","      <td>sop@example.com</td>\n","      <td>31</td>\n","      <td>Daniel</td>\n","      <td>Jones</td>\n","    </tr>\n","    <tr>\n","      <th>david</th>\n","      <td>dav@example.com</td>\n","      <td>46</td>\n","      <td>Jessica</td>\n","      <td>Miller</td>\n","    </tr>\n","    <tr>\n","      <th>olivia</th>\n","      <td>oli@example.com</td>\n","      <td>38</td>\n","      <td>Brian</td>\n","      <td>Davis</td>\n","    </tr>\n","    <tr>\n","      <th>liam</th>\n","      <td>lia@example.com</td>\n","      <td>49</td>\n","      <td>Olivia</td>\n","      <td>Garcia</td>\n","    </tr>\n","    <tr>\n","      <th>emma</th>\n","      <td>emm@example.com</td>\n","      <td>20</td>\n","      <td>Matthew</td>\n","      <td>Rodriguez</td>\n","    </tr>\n","    <tr>\n","      <th>matthew</th>\n","      <td>mat@example.com</td>\n","      <td>27</td>\n","      <td>Isabella</td>\n","      <td>Martinez</td>\n","    </tr>\n","    <tr>\n","      <th>anton</th>\n","      <td>anto@example.com</td>\n","      <td>14</td>\n","      <td>antonello</td>\n","      <td>antonello</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b3f7a06c-0dc5-43ff-97c3-1c8c2bc4d4ef')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b3f7a06c-0dc5-43ff-97c3-1c8c2bc4d4ef button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b3f7a06c-0dc5-43ff-97c3-1c8c2bc4d4ef');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-33bc173d-e28d-400f-a36c-67d77cb0c2de\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-33bc173d-e28d-400f-a36c-67d77cb0c2de')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-33bc173d-e28d-400f-a36c-67d77cb0c2de button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dfe","summary":"{\n  \"name\": \"dfe\",\n  \"rows\": 11,\n  \"fields\": [\n    {\n      \"column\": \"email\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"dav@example.com\",\n          \"ami@example.com\",\n          \"mat@example.com\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 14,\n        \"max\": 55,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          46,\n          29,\n          27\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"first_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"Jessica\",\n          \"John\",\n          \"Isabella\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"last_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"Miller\",\n          \"Smith\",\n          \"Martinez\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["newind = pd.Index(['emily', 'maverick', 'emma'])\n","newind"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"atJjE5upt1-_","executionInfo":{"status":"ok","timestamp":1708536854559,"user_tz":-300,"elapsed":282,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"65cb4163-2010-45ac-857d-cfe11642b55b"},"execution_count":60,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['emily', 'maverick', 'emma'], dtype='object')"]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["newind.isin(dfe.index)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nJuBWXXLuL9I","executionInfo":{"status":"ok","timestamp":1708536855172,"user_tz":-300,"elapsed":4,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"568ad85c-5c9d-4c95-b35e-85cd39e28486"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ True, False,  True])"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["dfe.index.difference(newind)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D_CWAl2VuqY6","executionInfo":{"status":"ok","timestamp":1708537433098,"user_tz":-300,"elapsed":5,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"bef6a568-83f5-46eb-f0ba-cbea857fa349"},"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['amirbek', 'anton', 'david', 'john', 'liam', 'matthew', 'olivia',\n","       'sophia'],\n","      dtype='object')"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["newind.difference(dfe.index)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MgGY-7PVw_KY","executionInfo":{"status":"ok","timestamp":1708537704299,"user_tz":-300,"elapsed":333,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"2a628087-d044-4011-e822-090b61728fb4"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['maverick'], dtype='object')"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["dfe.index.union(newind)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DiIi5O0wyGjF","executionInfo":{"status":"ok","timestamp":1708537725336,"user_tz":-300,"elapsed":4,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"a72d5d65-1a46-4368-d8fc-85ecb9484127"},"execution_count":65,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['amirbek', 'anton', 'anton', 'david', 'emily', 'emma', 'john', 'liam',\n","       'matthew', 'maverick', 'olivia', 'sophia'],\n","      dtype='object')"]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["dfe.index.delete(0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bot4HoYMyL4z","executionInfo":{"status":"ok","timestamp":1708537796918,"user_tz":-300,"elapsed":292,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"574277b0-ec4d-4024-845b-9eb51e814b59"},"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['anton', 'john', 'emily', 'sophia', 'david', 'olivia', 'liam', 'emma',\n","       'matthew', 'anton'],\n","      dtype='object')"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["dfe"],"metadata":{"id":"jePUBqa2ydSr","executionInfo":{"status":"ok","timestamp":1708537799330,"user_tz":-300,"elapsed":7,"user":{"displayName":"Amirbek Akramov","userId":"07296872385114653174"}},"outputId":"ac4cc0a0-d556-4c1e-bda4-9eb24e403729","colab":{"base_uri":"https://localhost:8080/","height":394}},"execution_count":67,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    email  age first_name  last_name\n","amirbek   ami@example.com   29       John      Smith\n","anton     ant@example.com   42      Emily    Johnson\n","john      joh@example.com   55    Michael   Williams\n","emily     emi@example.com   23     Sophia      Brown\n","sophia    sop@example.com   31     Daniel      Jones\n","david     dav@example.com   46    Jessica     Miller\n","olivia    oli@example.com   38      Brian      Davis\n","liam      lia@example.com   49     Olivia     Garcia\n","emma      emm@example.com   20    Matthew  Rodriguez\n","matthew   mat@example.com   27   Isabella   Martinez\n","anton    anto@example.com   14  antonello  antonello"],"text/html":["\n","  <div id=\"df-b57ac5e4-7a34-4238-872f-67b179114aa7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>email</th>\n","      <th>age</th>\n","      <th>first_name</th>\n","      <th>last_name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>amirbek</th>\n","      <td>ami@example.com</td>\n","      <td>29</td>\n","      <td>John</td>\n","      <td>Smith</td>\n","    </tr>\n","    <tr>\n","      <th>anton</th>\n","      <td>ant@example.com</td>\n","      <td>42</td>\n","      <td>Emily</td>\n","      <td>Johnson</td>\n","    </tr>\n","    <tr>\n","      <th>john</th>\n","      <td>joh@example.com</td>\n","      <td>55</td>\n","      <td>Michael</td>\n","      <td>Williams</td>\n","    </tr>\n","    <tr>\n","      <th>emily</th>\n","      <td>emi@example.com</td>\n","      <td>23</td>\n","      <td>Sophia</td>\n","      <td>Brown</td>\n","    </tr>\n","    <tr>\n","      <th>sophia</th>\n","      <td>sop@example.com</td>\n","      <td>31</td>\n","      <td>Daniel</td>\n","      <td>Jones</td>\n","    </tr>\n","    <tr>\n","      <th>david</th>\n","      <td>dav@example.com</td>\n","      <td>46</td>\n","      <td>Jessica</td>\n","      <td>Miller</td>\n","    </tr>\n","    <tr>\n","      <th>olivia</th>\n","      <td>oli@example.com</td>\n","      <td>38</td>\n","      <td>Brian</td>\n","      <td>Davis</td>\n","    </tr>\n","    <tr>\n","      <th>liam</th>\n","      <td>lia@example.com</td>\n","      <td>49</td>\n","      <td>Olivia</td>\n","      <td>Garcia</td>\n","    </tr>\n","    <tr>\n","      <th>emma</th>\n","      <td>emm@example.com</td>\n","      <td>20</td>\n","      <td>Matthew</td>\n","      <td>Rodriguez</td>\n","    </tr>\n","    <tr>\n","      <th>matthew</th>\n","      <td>mat@example.com</td>\n","      <td>27</td>\n","      <td>Isabella</td>\n","      <td>Martinez</td>\n","    </tr>\n","    <tr>\n","      <th>anton</th>\n","      <td>anto@example.com</td>\n","      <td>14</td>\n","      <td>antonello</td>\n","      <td>antonello</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b57ac5e4-7a34-4238-872f-67b179114aa7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b57ac5e4-7a34-4238-872f-67b179114aa7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b57ac5e4-7a34-4238-872f-67b179114aa7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4129b2cb-a0c9-443f-8b0a-18eb9ecb2233\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4129b2cb-a0c9-443f-8b0a-18eb9ecb2233')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4129b2cb-a0c9-443f-8b0a-18eb9ecb2233 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dfe","summary":"{\n  \"name\": \"dfe\",\n  \"rows\": 11,\n  \"fields\": [\n    {\n      \"column\": \"email\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"dav@example.com\",\n          \"ami@example.com\",\n          \"mat@example.com\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 14,\n        \"max\": 55,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          46,\n          29,\n          27\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"first_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"Jessica\",\n          \"John\",\n          \"Isabella\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"last_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"Miller\",\n          \"Smith\",\n          \"Martinez\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":[],"metadata":{"id":"ucjYafi6yd8E"},"execution_count":null,"outputs":[]}]}